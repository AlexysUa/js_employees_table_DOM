{"version":3,"sources":["scripts/main.js"],"names":["mainTable","document","querySelector","theadClickArea","bodyTable","selectFlag","renewDataFlag","prevSelect","flagState","currentElem","innerText","checkFlag","userSort","sortFlag","addEventListener","e","mainTH","target","closest","indexCol","cellIndex","allRows","children","sort","firstRow","secondRow","argFirst","cells","argSecond","match","join","localeCompare","map","row","append","item","classList","toggle","remove","input","createElement","selectedItem","innerHTML","add","setAttribute","focus","event1","keyCode","value","event2","stopImmediatePropagation","insertAdjacentHTML","mainForm","formElements","elements","buttonClick","getElementById","readAndPasteForm","nameF","posF","officeF","ageF","salF","toString","replace","validationForm","nameInput","posInput","officeInput","ageInput","salaryInput","length","popNotification","title","description","type","notice","body","setTimeout","preventDefault"],"mappings":";AAAA,aA8NC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5ND,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAiBH,EAAUE,cAAc,SACzCE,EAAYJ,EAAUE,cAAc,SAEtCG,GAAa,EAIjB,SAASC,IACHC,IAAAA,EAAa,GACbC,GAAY,EAET,OAAA,SAASC,GACVA,OAAAA,EAAYC,YAAcH,EAC5BC,GAAaA,GAIfA,GAAY,EACZD,EAAaE,EAAYC,UAElBF,IAKX,IAAMG,EAAYL,IAElB,SAASM,IACHC,IAAAA,GAAW,EAEfV,EAAeW,iBAAiB,QAAS,SAACC,GAClCC,IAAAA,EAASD,EAAEE,OAAOC,QAAQ,MAC1BC,EAAWH,EAAOI,UAClBC,EAAcjB,EAAAA,EAAUkB,UAEzBN,IAGLH,EAAWF,EAAUK,GAErBK,EAAQE,KAAK,SAACC,EAAUC,GAClBC,IAAAA,EAAWF,EAASG,MAAMR,GAAUT,UACpCkB,EAAYH,EAAUE,MAAMR,GAAUT,UAEtCM,MAAqB,WAArBA,EAAON,WACTgB,GAAYA,EAASG,MAAM,OAAOC,KAAK,IACvCF,GAAaA,EAAUC,MAAM,OAAOC,KAAK,IAElCjB,EACHe,EAAYF,EACZA,EAAWE,GAERf,EACHe,EAAUG,cAAcL,GACxBA,EAASK,cAAcH,KAI/BP,EAAQW,IAAI,SAAAC,GAAO7B,OAAAA,EAAU8B,OAAOD,QAIxCrB,EAASZ,GAETI,EAAUU,iBAAiB,QAAS,SAACC,GAC7BoB,IAAAA,EAAOpB,EAAEE,OAAOC,QAAQ,MAE1B,IAACb,EAIH,OAHAA,GAAa,OACb8B,EAAKC,UAAUC,OAAO,UAKxBpC,SAASC,cAAc,WAAWkC,UAAUE,OAAO,UACnDH,EAAKC,UAAUC,OAAO,YAGxBjC,EAAUU,iBAAiB,WAAY,SAACC,GAChCwB,IAAAA,EAAQtC,SAASuC,cAAc,SAC/BC,EAAe1B,EAAEE,OAAOC,QAAQ,MAChCR,EAAY+B,EAAaC,UAE/BH,EAAMH,UAAUO,IAAI,cACpBJ,EAAMK,aAAa,OAAQ,KAC3BH,EAAaC,UAAY,GACzBD,EAAaP,OAAOK,GAEpBA,EAAMM,QAsBNN,EAAMzB,iBAAiB,WApBL,SAACgC,GACM,KAAnBA,EAAOC,UACLR,EAAMS,MACRP,EAAaC,UAAYH,EAAMS,MAE/BP,EAAaC,UAAYhC,KAee,GAC9C6B,EAAMzB,iBAAiB,OAXL,SAACmC,GACjBA,EAAOC,2BAEHX,EAAMS,MACRP,EAAaC,UAAYH,EAAMS,MAE/BP,EAAaC,UAAYhC,IAKa,KAG5CV,EAAUmD,mBACR,WADF,24BAgCA,IAAMC,EAAWnD,SAASC,cAAc,sBAClCmD,EAAeD,EAASE,SACxBC,EAActD,SAASuD,eAAe,UAE5C,SAASC,EAAiBC,EAAOC,EAAMC,EAASC,EAAMC,GACpD1D,EAAU+C,mBAAmB,YAGnBO,yBAAAA,OAAAA,EACAC,qBAAAA,OAAAA,EACAC,qBAAAA,OAAAA,EACAC,qBAAAA,OAAAA,EACCC,sBAAAA,OAAAA,EAAKC,WAAWC,QAAQ,wBAAyB,KAP5D,yBAaF,SAASC,IACDC,IAAAA,EAAYb,EAAY,KAASL,MACjCmB,EAAWd,EAAY,SAAaL,MACpCoB,EAAcf,EAAY,OAAWL,MACrCqB,EAAWhB,EAAY,IAAQL,MAC/BsB,EAAcjB,EAAY,OAAWL,MAEvCkB,OAAAA,EAAUK,OAAS,EACdC,EAAgB,aACrB,6CAA8C,SAG7CL,GAKAE,GAAYA,EAAW,IAAMA,EAAW,GACpCG,EAAgB,YACrB,kCAAmC,SAGlCF,GAKLE,EAAgB,qBACd,sCAAuC,WACzCf,EAAiBS,EAAWC,EAAUC,EAAaC,EAAUC,GAE7DjB,EAAY,KAASL,MAAQ,GAC7BK,EAAY,SAAaL,MAAQ,GACjCK,EAAY,IAAQL,MAAQ,QAC5BK,EAAY,OAAWL,MAAQ,KAXtBwB,EAAgB,eACrB,8BAA+B,SAX1BA,EAAgB,iBACrB,sBAAuB,SA4B7B,SAASA,EAAgBC,EAAOC,EAAaC,GACrCC,IAAAA,EAC8CD,yDAAAA,OAAAA,EAC1CF,kBAAAA,OAAAA,EACDC,oBAAAA,OAAAA,EAHT,wBAOAzE,SAAS4E,KAAK1B,mBAAmB,YAAayB,GAE9CE,WAAW,WACT7E,SAASC,cAAkByE,IAAAA,OAAAA,IAAQrC,UAClC,KAjBLiB,EAAYzC,iBAAiB,QAAS,SAACC,GACrCA,EAAEgE,iBACFd","file":"main.91d7a9cf.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst mainTable = document.querySelector('table');\nconst theadClickArea = mainTable.querySelector('thead');\nconst bodyTable = mainTable.querySelector('tbody');\n\nlet selectFlag = false;\n\n//  Create a function for storing state of search button(th),\n//  it helps calculate function userSort().\nfunction renewDataFlag() {\n  let prevSelect = '';\n  let flagState = false;\n\n  return function(currentElem) {\n    if (currentElem.innerText === prevSelect) {\n      flagState = !flagState;\n\n      return flagState;\n    }\n    flagState = false;\n    prevSelect = currentElem.innerText;\n\n    return flagState;\n  };\n}\n\n// Making closure for base state of search button(th).\nconst checkFlag = renewDataFlag();\n\nfunction userSort() {\n  let sortFlag = false;\n\n  theadClickArea.addEventListener('click', (e) => {\n    const mainTH = e.target.closest('th');\n    const indexCol = mainTH.cellIndex;\n    const allRows = [...bodyTable.children];\n\n    if (!mainTH) {\n      return;\n    }\n    sortFlag = checkFlag(mainTH);\n\n    allRows.sort((firstRow, secondRow) => {\n      let argFirst = firstRow.cells[indexCol].innerText;\n      let argSecond = secondRow.cells[indexCol].innerText;\n\n      if (mainTH.innerText === 'Salary') {\n        argFirst = +argFirst.match(/\\d/g).join('');\n        argSecond = +argSecond.match(/\\d/g).join('');\n\n        return sortFlag\n          ? argSecond - argFirst\n          : argFirst - argSecond;\n      } else {\n        return sortFlag\n          ? argSecond.localeCompare(argFirst)\n          : argFirst.localeCompare(argSecond);\n      }\n    });\n\n    allRows.map(row => bodyTable.append(row));\n  });\n}\n\nuserSort(mainTable);\n\nbodyTable.addEventListener('click', (e) => {\n  const item = e.target.closest('tr');\n\n  if (!selectFlag) {\n    selectFlag = true;\n    item.classList.toggle('active');\n\n    return;\n  }\n\n  document.querySelector('.active').classList.remove('active');\n  item.classList.toggle('active');\n});\n\nbodyTable.addEventListener('dblclick', (e) => {\n  const input = document.createElement('input');\n  const selectedItem = e.target.closest('td');\n  const innerText = selectedItem.innerHTML;\n\n  input.classList.add('cell-input');\n  input.setAttribute('size', '1');\n  selectedItem.innerHTML = '';\n  selectedItem.append(input);\n\n  input.focus();\n\n  const eventKeys = (event1) => {\n    if (event1.keyCode === 13) {\n      if (input.value) {\n        selectedItem.innerHTML = input.value;\n      } else {\n        selectedItem.innerHTML = innerText;\n      }\n    }\n  };\n\n  const eventBlur = (event2) => {\n    event2.stopImmediatePropagation();\n\n    if (input.value) {\n      selectedItem.innerHTML = input.value;\n    } else {\n      selectedItem.innerHTML = innerText;\n    }\n  };\n\n  input.addEventListener('keypress', eventKeys, true);\n  input.addEventListener('blur', eventBlur, false);\n});\n\nmainTable.insertAdjacentHTML(\n  'afterend',\n  `\n  <form class=\"new-employee-form\" method=\"post\">\n    <label>\n      Name: <input data-qa=\"name\" name=\"name\" type=\"text\">\n    </label>\n    <label>\n      Position: <input data-qa=\"position\" name=\"position\" type=\"text\">\n    </label>\n    <label>\n      Office:\n      <select data-qa=\"office\" name=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\"></option>\n      </select>\n    </label>\n    <label>\n      Age: <input data-qa=\"age\" name=\"age\" type=\"number\">\n    </label>\n    <label>\n      Salary: <input data-qa=\"salary\" name=\"salary\" type=\"number\">\n    </label>\n    <button name=\"button\" id=\"submit\">Save to table</button>\n  </form>\n  `\n);\n\nconst mainForm = document.querySelector('.new-employee-form');\nconst formElements = mainForm.elements;\nconst buttonClick = document.getElementById('submit');\n\nfunction readAndPasteForm(nameF, posF, officeF, ageF, salF) {\n  bodyTable.insertAdjacentHTML('beforeend',\n    `\n    <tr>\n      <td>${nameF}</td>\n      <td>${posF}</td>\n      <td>${officeF}</td>\n      <td>${ageF}</td>\n      <td>$${salF.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</td>\n    </tr>\n  `\n  );\n}\n\nfunction validationForm() {\n  const nameInput = formElements['name'].value;\n  const posInput = formElements['position'].value;\n  const officeInput = formElements['office'].value;\n  const ageInput = formElements['age'].value;\n  const salaryInput = formElements['salary'].value;\n\n  if (nameInput.length < 4) {\n    return popNotification('Name ERROR',\n      'Please, input name more than 4 charachters', 'error');\n  }\n\n  if (!posInput) {\n    return popNotification('Position ERROR',\n      'Enter your position', 'error');\n  }\n\n  if (!ageInput || ageInput < 18 || ageInput > 90) {\n    return popNotification('Age ERROR',\n      'Sorry, but you have a wrong age', 'error');\n  }\n\n  if (!salaryInput) {\n    return popNotification('Salary ERROR',\n      'I`m sure, you have a salary', 'error');\n  }\n\n  popNotification('Employer was added',\n    'New employer was added to the table', 'success');\n  readAndPasteForm(nameInput, posInput, officeInput, ageInput, salaryInput);\n\n  formElements['name'].value = '';\n  formElements['position'].value = '';\n  formElements['age'].value = '';\n  formElements['salary'].value = '';\n}\n\nbuttonClick.addEventListener('click', (e) => {\n  e.preventDefault();\n  validationForm();\n});\n\nfunction popNotification(title, description, type) {\n  const notice = `\n    <div data-qa='notification' class='notification ${type}'>\n      <h1>${title}</h1>\n      <p>${description}</p>\n    </div>\n  `;\n\n  document.body.insertAdjacentHTML('beforeend', notice);\n\n  setTimeout(() => {\n    document.querySelector(`.${type}`).remove();\n  }, 2000);\n}\n"]}